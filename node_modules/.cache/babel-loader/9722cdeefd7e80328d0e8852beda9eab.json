{"ast":null,"code":"var _jsxFileName = \"/Users/reliable/Desktop/React test/test-nomad-rental/src/App.js\";\nimport React from \"react\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { history } from \"./helpers\";\nimport { alertActions } from \"./actions\";\nimport { PrivateRoute } from \"./components\";\nimport { HomePage } from \"./HomePage\";\nimport { LoginPage } from \"./LoginPage\";\nimport { RegisterPage } from \"./RegisterPage\";\nimport Booking from \"./components/Booking/main\";\nimport Account from \"./components/Account/Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    history.listen((location, action) => {\n      // clear alert on location change\n      this.props.clearAlerts();\n    });\n  }\n\n  render() {\n    const {\n      alert\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#ededed\",\n        height: \"100%\"\n      },\n      children: [alert.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert ${alert.type}`,\n        children: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        history: history,\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n            exact: true,\n            path: \"/\",\n            component: HomePage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: LoginPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            component: RegisterPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/booking\",\n            component: Booking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/account\",\n            component: Account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            from: \"*\",\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    alert\n  } = state;\n  return {\n    alert\n  };\n}\n\nconst actionCreators = {\n  clearAlerts: alertActions.clear\n};\nconst connectedApp = connect(mapState, actionCreators)(App);\nexport { connectedApp as App };","map":{"version":3,"sources":["/Users/reliable/Desktop/React test/test-nomad-rental/src/App.js"],"names":["React","Router","Route","Switch","Redirect","connect","history","alertActions","PrivateRoute","HomePage","LoginPage","RegisterPage","Booking","Account","App","Component","constructor","props","listen","location","action","clearAlerts","render","alert","backgroundColor","height","message","type","mapState","state","actionCreators","clear","connectedApp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,QAAhC,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AACA,MAAMC,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEAX,IAAAA,OAAO,CAACY,MAAR,CAAe,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACnC;AACA,WAAKH,KAAL,CAAWI,WAAX;AACD,KAHD;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKN,KAAvB;AACA,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEO,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OAAZ;AAAA,iBACGF,KAAK,CAACG,OAAN,iBACC;AAAK,QAAA,SAAS,EAAG,SAAQH,KAAK,CAACI,IAAK,EAApC;AAAA,kBAAwCJ,KAAK,CAACG;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEpB,OAAjB;AAAA,+BACE,QAAC,MAAD;AAAA,kCACE,QAAC,YAAD;AAAc,YAAA,KAAK,MAAnB;AAAoB,YAAA,IAAI,EAAC,GAAzB;AAA6B,YAAA,SAAS,EAAEG;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,WAAZ;AAAwB,YAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,SAAS,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,SAAS,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,QAAD;AAAU,YAAA,IAAI,EAAC,GAAf;AAAmB,YAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA7B+B;;AAgClC,SAASe,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEN,IAAAA;AAAF,MAAYM,KAAlB;AACA,SAAO;AAAEN,IAAAA;AAAF,GAAP;AACD;;AAED,MAAMO,cAAc,GAAG;AACrBT,EAAAA,WAAW,EAAEd,YAAY,CAACwB;AADL,CAAvB;AAIA,MAAMC,YAAY,GAAG3B,OAAO,CAACuB,QAAD,EAAWE,cAAX,CAAP,CAAkChB,GAAlC,CAArB;AACA,SAASkB,YAAY,IAAIlB,GAAzB","sourcesContent":["import React from \"react\"\n\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { history } from \"./helpers\"\nimport { alertActions } from \"./actions\"\nimport { PrivateRoute } from \"./components\"\nimport { HomePage } from \"./HomePage\"\nimport { LoginPage } from \"./LoginPage\"\nimport { RegisterPage } from \"./RegisterPage\"\nimport Booking from \"./components/Booking/main\"\nimport Account from \"./components/Account/Main\"\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    history.listen((location, action) => {\n      // clear alert on location change\n      this.props.clearAlerts()\n    })\n  }\n\n  render() {\n    const { alert } = this.props\n    return (\n      <div style={{ backgroundColor: \"#ededed\", height: \"100%\" }}>\n        {alert.message && (\n          <div className={`alert ${alert.type}`}>{alert.message}</div>\n        )}\n        <Router history={history}>\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={HomePage} />\n            <Route path=\"/login\" component={LoginPage} />\n            <Route path=\"/register\" component={RegisterPage} />\n            <Route path=\"/booking\" component={Booking} />\n            <Route path=\"/account\" component={Account} />\n            <Redirect from=\"*\" to=\"/\" />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nfunction mapState(state) {\n  const { alert } = state\n  return { alert }\n}\n\nconst actionCreators = {\n  clearAlerts: alertActions.clear\n}\n\nconst connectedApp = connect(mapState, actionCreators)(App)\nexport { connectedApp as App }\n"]},"metadata":{},"sourceType":"module"}